runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
library(writexl)
install.packages(writexl)
"writexl"
install.packages("writexl")
library(writexl)
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
install.packages("openxlsx")
install.packages("openxlsx")
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
shiny::runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/BibloBox')
library(openalexR)
library(dplyr)
library(ggplot2)
options(openalexR.mailto = "pnriddle@dal.ca")
oa_fetch(
entity = "works",
title.search = c("bibliometric analysis", "science mapping"),
cited_by_count = ">50",
from_publication_date = "2020-01-01",
to_publication_date = "2021-12-31",
sort = "cited_by_count:desc",
verbose = TRUE
) %>%
show_works() %>%
knitr::kable()
data <- oa_fetch(
entity = "works",
title.search = c("bibliometric analysis", "science mapping"),
cited_by_count = ">50",
from_publication_date = "2020-01-01",
to_publication_date = "2021-12-31",
sort = "cited_by_count:desc",
verbose = TRUE
) %>%
show_works() %>%
knitr::kable()
data <- oa_fetch(
entity = "works",
title.search = c("bibliometric analysis", "science mapping"),
cited_by_count = ">50",
from_publication_date = "2020-01-01",
to_publication_date = "2021-12-31",
sort = "cited_by_count:desc",
verbose = TRUE
)
View(data)
View(data)
data <- oa_fetch(
issn_l = "1932-6203",
entity = "works",
title.search = c("bibliometric analysis", "science mapping"),
cited_by_count = ">50",
from_publication_date = "2012-01-01",
to_publication_date = "2022-12-31",
sort = "cited_by_count:desc",
verbose = TRUE
)
help("openalexR")
data <- oa_fetch(
venue = "1932-6203",
entity = "works",
title.search = c("bibliometric analysis", "science mapping"),
cited_by_count = ">50",
from_publication_date = "2012-01-01",
to_publication_date = "2022-12-31",
sort = "cited_by_count:desc",
verbose = TRUE
)
help("oa_fetch")
data <- oa_fetch(
identifier = "V202381698",
entity = "works",
title.search = c("bibliometric analysis", "science mapping"),
cited_by_count = ">50",
from_publication_date = "2012-01-01",
to_publication_date = "2022-12-31",
sort = "cited_by_count:desc",
verbose = TRUE
)
data <- oa_fetch(
identifier = "V202381698",
entity = "works",
title.search = c("bibliometric analysis", "science mapping"),
#cited_by_count = ">50",
from_publication_date = "2012-01-01",
to_publication_date = "2022-12-31",
sort = "cited_by_count:desc",
verbose = TRUE
)
data <- oa_fetch(
identifier = "V202381698",
entity = "works",
title.search = c("bibliometric analysis"),
#cited_by_count = ">50",
from_publication_date = "2012-01-01",
to_publication_date = "2022-12-31",
sort = "cited_by_count:desc",
verbose = TRUE
)
library(openalexR)
library(dplyr)
library(ggplot2)
options(openalexR.mailto = "pnriddle@dal.ca")
data <- oa_fetch(
identifier = "V202381698",
entity = "works",
title.search = c("bibliometric analysis"),
#cited_by_count = ">50",
from_publication_date = "2012-01-01",
to_publication_date = "2022-12-31",
sort = "cited_by_count:desc",
verbose = TRUE
)
data <- oa_fetch(
identifier = "V202381698",
#entity = "works",
entity = if (is.null(identifier)) NULL else id_type(identifier[[1]]),
title.search = c("bibliometric analysis"),
#cited_by_count = ">50",
from_publication_date = "2012-01-01",
to_publication_date = "2022-12-31",
sort = "cited_by_count:desc",
verbose = TRUE
)
data <- oa_fetch(
identifier = "V202381698",
#entity = "works",
title.search = c("bibliometric analysis"),
#cited_by_count = ">50",
from_publication_date = "2012-01-01",
to_publication_date = "2022-12-31",
sort = "cited_by_count:desc",
verbose = TRUE
)
View(data)
View(data)
data <- oa_fetch(
identifier = "V202381698",
entity = "works",
title.search = c("bibliometric analysis"),
#cited_by_count = ">50",
from_publication_date = "2012-01-01",
to_publication_date = "2022-12-31",
sort = "cited_by_count:desc",
verbose = TRUE
)
data <- oa_fetch(
#identifier = "V202381698",
entity = "works",
title.search = c("bibliometric analysis"),
#cited_by_count = ">50",
from_publication_date = "2012-01-01",
to_publication_date = "2022-12-31",
sort = "cited_by_count:desc",
verbose = TRUE
)
data <- oa_fetch(
#identifier = "V202381698",
entity = "works",
title.search = c("bibliometric analysis"),
#cited_by_count = ">50",
from_publication_date = "2012-01-01",
to_publication_date = "2022-12-31",
sort = "cited_by_count:desc",
verbose = TRUE
)
View(data)
View(data)
View(data[[28]][[1]])
data_picard <- oa_fetch(
identifier = "A687641213",
entity = "works",
title.search = c("bibliometric analysis"),
#cited_by_count = ">50",
from_publication_date = "2012-01-01",
to_publication_date = "2022-12-31",
sort = "cited_by_count:desc",
verbose = TRUE
)
data_picard <- oa_fetch(
identifier = "A687641213",
entity = "works",
title.search = "bibliometric analysis",
#cited_by_count = ">50",
from_publication_date = "2012-01-01",
to_publication_date = "2022-12-31",
sort = "cited_by_count:desc",
verbose = TRUE
)
data_picard <- oa_fetch(
identifier = c("A687641213"),
verbose = TRUE
)
data_picard <- oa_fetch(
identifier = c("A687641213"),
entity = "works",
verbose = TRUE
)
View(data_picard)
View(data_picard)
View(data_picard[[5]][[1]])
View(data)
data_picard <- oa_fetch(
identifier = c("A687641213"),
entity = "works",
abstract = TRUE,
verbose = TRUE
)
data_picard <- oa_fetch(
identifier = c("A687641213"),
entity = "venues",
abstract = TRUE,
verbose = TRUE
)
data_picard <- oa_fetch(
identifier = c("A687641213"),
#entity = "works",
abstract = TRUE,
verbose = TRUE
)
View(data_picard)
View(data_picard)
View(data_picard[[5]][[1]])
View(data_picard[[9]][[1]])
setwd("~/Documents/GitHubhttps:/github.com/poppy-nicolette/ShinyShiny/ShinyShiny/BibloBox")
library(dplyr)
library(stringr)
library(readxl)
library(openalexR)
options(openalexR.mailto = "pmongeon@dal.ca")
template <- read_excel("template_info6850.xlsx", sheet = 2) %>%
mutate(doi = str_sub(doi, str_locate(doi,"10.")[,1])) %>%
mutate(openalex_id = str_sub(openalex_id, str_locate(openalex_id,"W")[,1]))
for (i in 1:nrow(template)) {
doi<-""
id<-""
doi<-template[i,]$doi[!is.na(template[i,]$doi)]
id<-template[i,]$openalex_id[!is.na(template[i,]$openalex_id)]
data <- tibble()
data_doi <- tibble()
data_id <- tibble()
if(length(doi)>0) {
data <- oa_fetch(doi = doi,entity = "works", verbose = TRUE, abstract = TRUE)
} else if (length(id)>0) {
data <- oa_fetch(identifier = id, entity = "works", verbose = TRUE, abstract = TRUE)
}
if(length(data)>0){
template[i,]$doi <- data$doi
template[i,]$openalex_id <- data$id
template[i,]$pub_year <- data$publication_year
template[i,]$title <- data$display_name
template[i,]$authors <- paste(shQuote(data$author[[1]]$au_display_name), collapse=", ")
template[i,]$openalex_author_ids <- paste(shQuote(data$author[[1]]$au_id), collapse=", ")
template[i,]$source <- data$so
template[i,]$volume <- data$volume
template[i,]$number <- data$issue
if(data$first_page == data$last_page) {pages <- data$first_page} else {pages <- paste(data$first_page,"-",data$last_page, sep = "")}
template[i,]$pages <- pages
template[i,]$institutions <- paste(shQuote(unique(data$author[[1]]$institution_display_name)), collapse=", ")
template[i,]$openalex_institution_ids <- paste(shQuote(unique(data$author[[1]]$institution_id)), collapse=", ")
template[i,]$countries <- paste(shQuote(unique(data$author[[1]]$institution_country_code)), collapse=", ")
template[i,]$authors_affiliations <- paste(shQuote(paste(data$author[[1]]$au_id," [",data$author[[1]]$institution_id,"]",sep="")), collapse=", ")
template[i,]$abstract <- data$ab
template[i,]$wikidata_concepts <- paste(shQuote(data$concepts[[1]]$display_name), collapse=", ")
}
}
View(template)
View(template)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/CODING_WORKING/R/PROJECTS/shiny/tabset_1')
setwd("~/Documents/GitHubhttps:/github.com/poppy-nicolette/ShinyShiny/ShinyShiny/tabset_1")
runApp()
install.packages("LDAvis")
library(LDAvis)
help(createJSON, package = "LDAvis")
# create the json object, start a local file server, open in default browser
json <- with(TwentyNewsgroups,
createJSON(phi, theta, doc.length, vocab, term.frequency))
serVis(json) # press ESC or Ctrl-C to kill
# createJSON() reorders topics in decreasing order of term frequency
RJSONIO::fromJSON(json)$topic.order
serVis(json, out.dir = 'TwentyNewsgroups', open.browser = FALSE)
library(LDAvisData)
devtools::install_github("cpsievert/LDAvisData")
runApp()
install.packages("highcharter")
vignette("showcase")
library(highcharter)
# install.packages("palmerpenguins")
data(penguins, package = "palmerpenguins")
hchart(
penguins,
"scatter",
hcaes(x = flipper_length_mm, y = bill_length_mm, group = species)
)
x <- c(rnorm(10000), rnorm(1000, 4, 0.5))
hchart(x, name = "data", color = "#17b8b6")
library(forecast)
install.packages("leaflet")
install.packages("leaflet")
library(leaflet)
library(magrittr)
m <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
m  # Print the map
library(tidyverse)
library(ggplot2)
setwd("~/Documents/GitHubhttps:/github.com/poppy-nicolette/ShinyShiny/ShinyShiny/tabset_1")
data1 <- dataset <- read.csv("/data/publication_data.csv", header=TRUE, stringsAsFactors=FALSE)
data1 <- dataset <- read.csv("data/publication_data.csv", header=TRUE, stringsAsFactors=FALSE)
View(dataset)
View(dataset)
data1 <- dataset <- read.csv("data/publication_data.csv",
header=TRUE,
sep=":",
stringsAsFactors=FALSE)
data1 <- dataset <- read.csv("data/publication_data.csv",
header=TRUE,
sep=";",
)
file = "data/publication_data.csv"
read.csv2(file, header = TRUE, sep = ";", quote = "\"", dec = ",",
fill = TRUE, comment.char = "", encoding = "unknown", ...)
file = "data/publication_data.csv"
read.csv2(file, header = TRUE, sep = ";", quote = "\"", dec = ",",
fill = TRUE, comment.char = "", encoding = "unknown",)
file = "data/publication_data.csv"
dataset <- read.csv2(file, header = TRUE, sep = ";", quote = "\"", dec = ",",
fill = TRUE, comment.char = "", encoding = "unknown",)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
#drop where doi is NULL
dataset %>%  drop_na("doi")
View(dataset)
View(dataset)
View(penguins)
dataset %>%  drop_na(doi)
dataset <-  drop_na(doi)
View(dataset)
View(dataset)
#drop where doi is NULL
dataset %>% drop_na(doi)
View(dataset)
View(dataset)
View(dataset)
library(tidyverse)
library(magrittr)
file = "data/publication_data.csv"
dataset <- read.csv2(file, header = TRUE, sep = ";", quote = "\"", dec = ",",
fill = TRUE, comment.char = "", encoding = "unknown",)
#drop where doi is NULL
dataset %>% drop_na(doi)
#search for doi in openalex
View(dataset)
View(dataset)
View(penguins)
View(penguins)
View(dataset)
View(dataset)
library(openalexR)
library(tidyverse)
library(magrittr)
library(openalexR)
library(dplyr)
library(stringr)
library(readxl)
if(length(doi)>0) {
data <- oa_fetch(doi = doi,entity = "works", verbose = TRUE, abstract = TRUE)}
dataset %>% drop_na(doi)
#search for doi in openalex
for (i in 1:nrow(dataset)) {
doi<-""
id<-""
doi<-dataset[i,]$doi[!is.na(dataset[i,]$doi)]
id<-dataset[i,]$openalex_id[!is.na(dataset[i,]$openalex_id)]
data <- tibble()
data_doi <- tibble()
data_id <- tibble()
if(length(doi)>0) {
data <- oa_fetch(doi = doi,entity = "works", verbose = TRUE, abstract = TRUE)
} else if (length(id)>0) {
data <- oa_fetch(identifier = id, entity = "works", verbose = TRUE, abstract = TRUE)
}
}
View(dataset)
View(dataset)
View(penguins)
View(data)
View(data_doi)
View(data_id)
View(data)
#drop where doi is NULL
dataset %>% drop_na(doi)
View(dataset)
#drop where doi is NULL
dataset %>% tidyr::drop_na(doi)
View(dataset)
View(dataset)
View(penguins)
library(tidyverse)
library(magrittr)
library(openalexR)
library(dplyr)
library(stringr)
library(readxl)
file = "data/publication_data.csv"
dataset <- read.csv2(file, header = TRUE, sep = ";", quote = "\"", dec = ",",
fill = TRUE, comment.char = "", encoding = "unknown",)
#drop where doi is NULL
dataset %>% tidyr::drop_na(doi)
library(tidyverse)
library(tidyr)
library(magrittr)
library(openalexR)
library(dplyr)
library(stringr)
library(readxl)
#drop where doi is NULL
dataset %>% tidyr::drop_na(doi)
dataset %>% tidyr::drop_na(doi)
#drop where doi is NULL
dataset2 <- tidyr::drop_na(doi)
dataset <- tidyr::drop_na(doi)
dataset <- tidyr::drop_na('doi')
dataset %>%  tidyr::drop_na(doi)
dataset %>%
# recode empty strings "" by NAs
na_if("") %>%
# remove NAs
na.omit
View(dataset)
View(dataset)
file = "data/publication_data.csv"
df <- read.csv2(file, header = TRUE, sep = ";", quote = "\"", dec = ",",
fill = TRUE, comment.char = "", encoding = "unknown",)
#drop where doi is NULL
df[df==""]<-NA
df<-df[complete.cases(df),]
View(df)
View(df)
file = "data/publication_data.csv"
df <- read.csv2(file, header = TRUE, sep = ";", quote = "\"", dec = ",",
fill = TRUE, comment.char = "", encoding = "unknown",)
#drop where doi is NULL
df[df==""]<-NA
df<-df[complete.cases(df['doi']),]
View(df)
View(df)
View(df)
View(df)
dataset <- df
for (i in 1:nrow(dataset)) {
doi<-""
id<-""
doi<-dataset[i,]$doi[!is.na(dataset[i,]$doi)]
id<-dataset[i,]$openalex_id[!is.na(dataset[i,]$openalex_id)]
data <- tibble()
data_doi <- tibble()
data_id <- tibble()
if(length(doi)>0) {
data <- oa_fetch(doi = doi,entity = "works", verbose = TRUE, abstract = TRUE)
} else if (length(id)>0) {
data <- oa_fetch(identifier = id, entity = "works", verbose = TRUE, abstract = TRUE)
}
if(length(data)>0){
dataset[i,]$doi <- data$doi
dataset[i,]$abstract <- data$ab
}
}
View(dataset)
View(dataset)
setwd("~/Documents/GitHubhttps:/github.com/poppy-nicolette/ShinyShiny/ShinyShiny/BibloBox")
shiny::runApp()
